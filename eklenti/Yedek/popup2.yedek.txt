// Oturum açma işlemi başarılı
// Burada diğer işlemlerinizi yapabilirsiniz
var user_email = "";
function checkInputs() {
  let inputs = document.querySelectorAll('input');
  let hasEmptyInput = false;

  inputs.forEach(function (input) {
    if (!input.value) {
      input.style.borderColor = 'red';
      input.animate([
        { transform: 'translateX(-10px)' },
        { transform: 'translateX(10px)' },
        { transform: 'translateX(-10px)' },
        { transform: 'translateX(10px)' },
        { transform: 'translateX(0px)' },
      ], {
        duration: 500,
        iterations: 1
      }).onfinish = function () {
        setTimeout(function () {
          input.style.animation = '';
        }, 2000);
      };
      hasEmptyInput = true;
    } else {
      input.style.borderColor = '';
      input.style.animation = '';
    }
  });

  return !hasEmptyInput;
}

function handleInputChange(event) {
  const input = event.target;
  if (input.value) {
    input.style.borderColor = '';
    input.style.animation = '';
  }
}

let inputs = document.querySelectorAll('input');
inputs.forEach(function (input) {
  input.onchange = handleInputChange;
});




const showButton = document.getElementById('show-button');
const birthdayList = document.getElementById('birthday-list');
let isShowingBirthdays = false;

chrome.storage.local.get('user_email', async function (result) {
  const user_email = result.user_email;
  const showButton = document.getElementById('show-button');
  const birthdayList = document.getElementById('birthday-list');
  let isShowingBirthdays = false;

  showButton.addEventListener('click', async () => {
    if (isShowingBirthdays) {
      birthdayList.innerHTML = '';
      showButton.innerText = 'Kişileri Göster';
      isShowingBirthdays = false;
    } else {
      try {
        const data = await fetchBirthdayData(user_email);
        const listHtml = generateListHtml(data);
        birthdayList.innerHTML = listHtml;
        showButton.innerText = 'Kişileri Gizle';
        isShowingBirthdays = true;
        addDeleteListeners(user_email);
      } catch (error) {
        console.error('Doğum günü bilgileri alınırken hata oluştu:', error);
      }
    }
  });

  async function fetchBirthdayData(user_email) {
    const response = await fetch(`https://www.furkancakr.online/api_birthday_reminder/birthday_info_user/${user_email}`);
    if (!response.ok) {
      throw new Error('Sunucudan hata alındı.');
    }
    const data = await response.json();
    console.log(data);
    return data;
  }
  function refreshBirthdayList(user_email) {
    fetch(`https://www.furkancakr.online/api_birthday_reminder/birthday_info_user/${user_email}`)
      .then(response => {
        if (!response.ok) {
          throw new Error('Sunucudan hata alındı.');
        }
        return response.json();
      })
      .then(data => {
        console.log(data);
        let listHtml = '<ul style="list-style:none;text-align: left;padding-left: 7px;">';
        data.forEach(person => {
          listHtml += `<li><img src="src/images/trash.png" alt="delete" width="10 px" height="10 px" style="vertical-align: middle; margin-right: 5px;"/>${person.first_name} ${person.last_name} - <span class="birthday-date">${person.birthday_day}/${person.birthday_month}/${person.birthday_year}</span> </li>`;
        });
        listHtml += '</ul>';
        birthdayList.innerHTML = listHtml;
        showButton.innerText = 'Kişileri Gizle';
        isShowingBirthdays = true;

        // add delete listeners again
        addDeleteListeners(user_email);
      })
      .catch(error => {
        console.error('Doğum günü bilgileri alınırken hata oluştu:', error);
      });
  }


  function generateListHtml(data) {
    let listHtml = '<ul style="list-style:none;text-align: left;padding-left: 7px;">';
    data.forEach(person => {
      listHtml += `<li><img src="src/images/trash.png" alt="delete" width="10 px" height="10 px" style="vertical-align: middle; margin-right: 5px;"/>${person.first_name} ${person.last_name} - <span class="birthday-date">${person.birthday_day}/${person.birthday_month}/${person.birthday_year}</span> </li>`;
    });
    listHtml += '</ul>';
    return listHtml;
  }

  function addDeleteListeners(user_email) {
    const trashIcons = document.querySelectorAll("img[src='src/images/trash.png']");

    trashIcons.forEach(icon => {
      icon.addEventListener('click', async () => {
        try {
          const listItem = icon.closest('li');
          const fullName = listItem.textContent.trim();
          const [name, birthDate] = fullName.split(" - ");
          const [firstName, lastName] = name.split(" ");
          const url = `https://www.furkancakr.online/api_birthday_reminder/birthday_info_user/${user_email}/${firstName}/${lastName}`;

          const response = await fetch(url, {
            method: "DELETE",
            headers: {
              "Content-Type": "application/json"
            }
          });
          const data = await response.json();
          console.log(data);
          alert(`${firstName} ${lastName} isimli kişi başarıyla silindi!`);

          // Refresh the list of birthdays
          await refreshBirthdayList(user_email);
        } catch (error) {
          console.error('Doğum günü bilgisi silinirken hata oluştu:', error);
        }
      });
    });
  }


  document.getElementById("submit-button").addEventListener("click", async function () {
    if (!checkInputs()) {
      return;
    }
    let firstName = document.getElementById("first-name").value;
    let lastName = document.getElementById("last-name").value;
    let birthday = document.getElementById("birthday").value;
    let [year, month, day] = birthday.split("-");

    fetch("https://www.furkancakr.online/api_birthday_reminder/birthday_info_user", {
      method: "POST",
      headers: {
        "Content-Type": "application/json"
      },
      body: JSON.stringify({
        user_email: user_email,
        first_name: firstName,
        last_name: lastName,
        birthday_day: day,
        birthday_month: month,
        birthday_year: year
      })
    })
      .then(response => response.json())
      .then(data => {
        console.log(data);
        alert("Kaydedildi!");
        // Input alanlarını temizle
        document.getElementById("first-name").value = "";
        document.getElementById("last-name").value = "";
        document.getElementById("birthday").value = "";


        // Yenileme işlemi
        if (isShowingBirthdays) {
          fetch(`https://www.furkancakr.online/api_birthday_reminder/birthday_info_user/${user_email}`)
            .then(response => {
              if (!response.ok) {
                throw new Error('Sunucudan hata alındı.');
              }
              return response.json();
            })
            .then(data => {
              console.log(data);
              let listHtml = '<ul style="list-style:none;text-align: left;padding-left: 7px;">';
              data.forEach(person => {
                listHtml += `<li><img src="src/images/trash.png" alt="delete" width="10 px" height="10 px" style="vertical-align: middle; margin-right: 5px;"/>${person.first_name} ${person.last_name} - ${person.birthday_day}/${person.birthday_month}/${person.birthday_year} </li>`;
              });
              listHtml += '</ul>';
              birthdayList.innerHTML = listHtml;
              showButton.innerText = 'Kişileri Gizle';
              isShowingBirthdays = true;
            })
            .catch(error => {
              console.error('Doğum günü bilgileri alınırken hata oluştu:', error);
            });
        }

      })
      .catch(error => console.error(error));
  });
});

document.addEventListener('DOMContentLoaded', function () {

  // Check for and set last used email
  chrome.storage.local.get(['user_email'], function (result) {
    if (result.user_email) {
      document.getElementById('email').innerHTML = result.user_email;
      document.getElementById('form-container').style.display = 'block';
      document.getElementById('login').style.display = 'none';

    }
  });

  // Add event listener for login button
  document.getElementById('login').addEventListener('click', async function () {
    chrome.runtime.sendMessage({ method: "getAuthToken" }, function (response) {
      const user_email = response.email;
      console.log(user_email); // önce log'lamalısınız çünkü chrome.runtime.sendMessage asenkron bir işlem
      chrome.storage.local.set({ "user_email": user_email }, function () {
        console.log("User email saved to storage: " + user_email);
      });

      if (user_email !== "" || user_email !== null) {
        document.getElementById('form-container').style.display = 'block';
        document.getElementById('login').style.display = 'none';
      }
    });
  });

  // Add event listener for logout button
  // logout-button üzerine click event listener eklenmesi
  document.getElementById('logout-button').addEventListener('click', function () {
    // isShowingBirthdays değişkeninin false değerine dönüştürülmesi
    isShowingBirthdays = false;
    // birthdayList.innerHTML'in temizlenmesi
    birthdayList.innerHTML = '';
    chrome.storage.local.set({ "user_email": "" }, function () {
      console.log("User email saved to storage: " + user_email);
    });

    // Formu gizleme
    document.getElementById('form-container').style.display = 'none';

    // Oturum Aç butonunu görünür hale getirme
    document.getElementById('login').style.display = 'block';
  });

  // Check for changes to user_email in storage
  chrome.storage.onChanged.addListener(function (changes, areaName) {
    if (areaName === "local" && changes.user_email) {
      if (changes.user_email.newValue) {
        document.getElementById('email').innerHTML = changes.user_email.newValue;
        document.getElementById('form-container').style.display = 'block';
        document.getElementById('login').style.display = 'none';
      } else {
        document.getElementById('form-container').style.display = 'none';
        document.getElementById('login').style.display = 'block';
      }
    }
  });

});

